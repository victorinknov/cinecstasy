CREATE DATABASE dbcinecstasy; -- -> Cria o banco de dados

USE dbcinecstasy;  -- -> Seleciona o banco de dados

-- DROP DATABASE dblinks; -- -> Deleta o banco de dados

-- -- -> [01] Tabela para o endereço | Table for the addresses
CREATE TABLE tbAddress(
     idAddress INT (11) AUTO_INCREMENT PRIMARY KEY,
     countryName VARCHAR(64) not null,
     stateName VARCHAR(128) not null,
     cityName VARCHAR(128) not null,
     districtName VARCHAR(128) not null,
     streetName VARCHAR(128) not null,
     houseNumber VARCHAR(8) not null,
     postalCode VARCHAR(16) not null
);

-- -- -> [02] Tabela para os filmes | Table for the movies
CREATE TABLE tbMovie(
     idMovie INT (11) AUTO_INCREMENT PRIMARY KEY,
     movieName VARCHAR(128) not null,
     moviePoster VARCHAR(512) not null,
     duration INT(3) not null,
     parentalRating VARCHAR(2) not null,
     releaseDate DATE not null,
     dateString VARCHAR(16) not null,
     movieCast VARCHAR(1024) not null,
     genre VARCHAR(128) not null,
     director VARCHAR(128) not null,
     classInd VARCHAR(128) not null,
     sinopse VARCHAR(1024) not null,
     status VARCHAR(16) not null,
     statusClass VARCHAR(64) not null
);

-- -- -> [03] Tabela para o tipo de sala | Table for the type of the room
CREATE TABLE tbRoomType(
     idRoomType INT (11) AUTO_INCREMENT PRIMARY KEY,
     nameType VARCHAR(16) not null
);

-- -- -> [04] Tabela para o cinema | Table for the cinema
CREATE TABLE tbCinema(
     idCinema INT (11) AUTO_INCREMENT PRIMARY KEY,
     idAddress INT,
     nameCinema VARCHAR(128) not null,
     logoCinema VARCHAR(512) not null,
     CNPJ VARCHAR(14) not null,
     credencial VARCHAR(32) not null,
     password VARCHAR(128) not null,
     FOREIGN KEY(idAddress) REFERENCES tbAddress(idAddress)
); 

-- -- -> [05] Tabela para a sala de cinema | Table for room.
CREATE TABLE tbRoom(
     idRoom INT (11) AUTO_INCREMENT PRIMARY KEY,
     idCinema INT not null,
     idRoomType INT not null,
     seatsNumber INT(3) not null,
     FOREIGN KEY (idCinema) REFERENCES tbCinema (idCinema),
     FOREIGN KEY (idRoomType) REFERENCES tbRoomType (idRoomType)
);

-- -- -> [06] Tabela para os assentos | Table for the seats.
CREATE TABLE tbSeats (
     idSeat VARCHAR (3) PRIMARY KEY not null,
     idRoom INT not null,
     status BOOLEAN not null,
     FOREIGN KEY (idRoom) REFERENCES tbRoom (idRoom)
);

-- -- -> [07] Tabela para a sessão | Table for the session.
CREATE TABLE tbSession(
     idSession INT (11) AUTO_INCREMENT PRIMARY KEY,
     idRoom INT not null,
     idMovie INT not null,
     startSession DATETIME not null,
     endSession DATETIME,
     FOREIGN KEY (idRoom) REFERENCES tbRoom (idRoom),
     FOREIGN KEY (idMovie) REFERENCES tbMovie (idMovie),
     status BOOLEAN not null default 1
);

-- -- -> [08] Tabela para os assentos anticovid | Table for anticovid seat
CREATE TABLE tbAntiCovid (
     idSeatAntiCovid INT (11) AUTO_INCREMENT PRIMARY KEY,
     idSession INT not null,
     idSeat VARCHAR (3) not null,
     FOREIGN KEY (idSession) REFERENCES tbSession (idSession),
     FOREIGN KEY (idSeat) REFERENCES tbSeats (idSeat)
);

-- -- -> [09] Tabela para o cargo do funcionário | Table for employee position
CREATE TABLE tbPosition(
     idPosition INT (11) AUTO_INCREMENT PRIMARY KEY,
     namePosition VARCHAR(32) not null,
     salary FLOAT(5, 2) not null
);

-- -- -> [10] Tabela para o funcionário | Table for employee
CREATE TABLE tbEmployee(
     idEmployee INT(11) AUTO_INCREMENT PRIMARY KEY,
     idPosition INT not null,
     idAddress INT,
     employeeImage VARCHAR(512) not null,
     employeeName VARCHAR(64) not null,
     email VARCHAR(64) not null,
     password VARCHAR(64) not null,
     CPF VARCHAR(11) not null,
     TEL VARCHAR(11) not null,
     FOREIGN KEY (idPosition) REFERENCES tbPosition (idPosition),
     FOREIGN KEY (idAddress) REFERENCES tbAddress (idAddress)
);

-- -- -> [11] Tabela para o usuário | Table for user
CREATE TABLE tbUser(
     idUser INT(11) AUTO_INCREMENT PRIMARY KEY,
     idAddress INT,
     firstName VARCHAR(32) not null,
     lastName VARCHAR(32) not null,
     email VARCHAR(64) not null,
     password VARCHAR(64) not null,
     birthday DATE not null,
     userImage VARCHAR(512) not null,
     FOREIGN KEY (idAddress) REFERENCES tbAddress (idAddress)
);

-- -- -> [12] Tabela para o snackbar | Table for snackbar
CREATE TABLE tbSnackBar(
     idSnackBar INT (11) AUTO_INCREMENT PRIMARY KEY,
     idAddress INT,
     fk_credencial INT,
     logoSnackbar VARCHAR(512) not null,
     credencial VARCHAR(32) not null,
     password VARCHAR(128) not null,
     CNPJ VARCHAR(14) not null,
     snackBarName VARCHAR(64) not null,
     typeFood VARCHAR(64) not null,
     FOREIGN KEY (fk_credencial) REFERENCES tbCinema (idCinema),
     FOREIGN KEY (idAddress) REFERENCES tbAddress (idAddress)
);

-- -- -> [13] Tabela para o ingresso | Table for ticket
CREATE TABLE tbTicket (
     idTicket INT (11) AUTO_INCREMENT PRIMARY KEY,
     idSession INT not null,
     idSeat VARCHAR (3) not null,
     idUser INT not null,
     FOREIGN KEY (idSession) REFERENCES tbSession (idSession),
     FOREIGN KEY (idSeat) REFERENCES tbSeats (idSeat),
     FOREIGN KEY (idUser) REFERENCES tbUser (idUser)
);

-- -- -> [14] Tabela para armazenar a sessão do usuário | Table for store the user session
CREATE TABLE tbCookieSession(
     idCookieSession INT (11) AUTO_INCREMENT PRIMARY KEY,
     idUser INT not null,
     firstName VARCHAR (64) not null,
     lastName VARCHAR(64) not null,
     email VARCHAR(126) not null,
     dateCookie DATETIME,
     FOREIGN KEY (idUser) REFERENCES tbUser (idUser)
);

-- -- -> [01] Populando a tabela cinema | Populate cinema table
INSERT INTO tbCinema(nameCinema, logoCinema, CNPJ, credencial, password) VALUES 
     ('Cinecstasy', 'logo.svg', '0000000000000', 'cinecstasy-admin', '12345');

-- -- -> [02] Populando a tabela tipo de sala | Populate the room type table
INSERT INTO tbRoomType(nameType) VALUES
     ('4DX'),
     ('IMAX'),
     ('Macro XE'),
     ('XD');

-- -- -> [03] Populando a tabela sala | Populate table room
INSERT INTO tbRoom(idRoomType, idCinema, seatsNumber) VALUES
     (1, 1, 324),
     (2, 1, 112),
     (3, 1, 224),
     (4, 1, 279);

-- -- -> [04] Populando a tabela filme | Populate table movie
INSERT INTO tbMovie(movieName, sinopse, parentalRating, releaseDate, movieCast, duration, director, genre, classInd, dateString, status, statusClass, moviePoster) VALUES
     ('Django Livre',
     '"No sul dos Estados Unidos, o ex-escravo Django faz uma aliança inesperada com o caçador de recompensas Schultz para caçar os criminosos mais procurados do país e resgatar sua esposa de um fazendeiro que força seus escravos a participar de competições mortais."',
     '16',
     '2013-01-18',
     'Jamie Foxx; Leonardo DiCaprio; Christoph Waltz',
     '165',
     'Quentin Tarantino',
     'ação',
     'parental-16',
     '2013-01-18',
     'inativo',
     'status-inativo',
     'django-livre.jpg');

-- -- -> [05] Populando a tabela sessão | Populate table session
INSERT INTO tbSession(idRoom, idMovie, startSession) VALUES
     (1, 1, '2021-04-01 13:10:00');

-- -- -> [06] Populando a tabela assentos | Populate table seats
INSERT INTO tbSeats(idSeat, idRoom, status) VALUES 
('A01', 1, 1),
('A02', 1, 1),
('A03', 1, 1),
('A04', 1, 1),
('A05', 1, 1),
('A06', 1, 1),
('A07', 1, 1),
('A08', 1, 1),
('A09', 1, 1),
('A10', 1, 1),
('A11', 1, 1),
('A12', 1, 1),
('A13', 1, 1),
('A14', 1, 1),
('A15', 1, 1),
('A16', 1, 1),
('A17', 1, 1),
('A18', 1, 1),
('B01', 1, 1),
('B02', 1, 1),
('B03', 1, 1),
('B04', 1, 1),
('B05', 1, 1),
('B06', 1, 1),
('B07', 1, 1),
('B08', 1, 1),
('B09', 1, 1),
('B10', 1, 1),
('B11', 1, 1),
('B12', 1, 1),
('B13', 1, 1),
('B14', 1, 1),
('B15', 1, 1),
('B16', 1, 1),
('B17', 1, 1),
('B18', 1, 1),
('C01', 1, 1),
('C02', 1, 1),
('C03', 1, 1),
('C04', 1, 1),
('C05', 1, 1),
('C06', 1, 1),
('C07', 1, 1),
('C08', 1, 1),
('C09', 1, 1),
('C10', 1, 1),
('C11', 1, 1),
('C12', 1, 1),
('C13', 1, 1),
('C14', 1, 1),
('C15', 1, 1),
('C16', 1, 1),
('C17', 1, 1),
('C18', 1, 1),
('D01', 1, 1),
('D02', 1, 1),
('D03', 1, 1),
('D04', 1, 1),
('D05', 1, 1),
('D06', 1, 1),
('D07', 1, 1),
('D08', 1, 1),
('D09', 1, 1),
('D10', 1, 1),
('D11', 1, 1),
('D12', 1, 1),
('D13', 1, 1),
('D14', 1, 1),
('D15', 1, 1),
('D16', 1, 1),
('D17', 1, 1),
('D18', 1, 1),
('E01', 1, 1),
('E02', 1, 1),
('E03', 1, 1),
('E04', 1, 1),
('E05', 1, 1),
('E06', 1, 1),
('E07', 1, 1),
('E08', 1, 1),
('E09', 1, 1),
('E10', 1, 1),
('E11', 1, 1),
('E12', 1, 1),
('E13', 1, 1),
('E14', 1, 1),
('E15', 1, 1),
('E16', 1, 1),
('E17', 1, 1),
('E18', 1, 1),
('F01', 1, 1),
('F02', 1, 1),
('F03', 1, 1),
('F04', 1, 1),
('F05', 1, 1),
('F06', 1, 1),
('F07', 1, 1),
('F08', 1, 1),
('F09', 1, 1),
('F10', 1, 1),
('F11', 1, 1),
('F12', 1, 1),
('F13', 1, 1),
('F14', 1, 1),
('F15', 1, 1),
('F16', 1, 1),
('F17', 1, 1),
('F18', 1, 1),
('G01', 1, 1),
('G02', 1, 1),
('G03', 1, 1),
('G04', 1, 1),
('G05', 1, 1),
('G06', 1, 1),
('G07', 1, 1),
('G08', 1, 1),
('G09', 1, 1),
('G10', 1, 1),
('G11', 1, 1),
('G12', 1, 1),
('G13', 1, 1),
('G14', 1, 1),
('G15', 1, 1),
('G16', 1, 1),
('G17', 1, 1),
('G18', 1, 1),
('H01', 1, 1),
('H02', 1, 1),
('H03', 1, 1),
('H04', 1, 1),
('H05', 1, 1),
('H06', 1, 1),
('H07', 1, 1),
('H08', 1, 1),
('H09', 1, 1),
('H10', 1, 1),
('H11', 1, 1),
('H12', 1, 1),
('H13', 1, 1),
('H14', 1, 1),
('H15', 1, 1),
('H16', 1, 1),
('H17', 1, 1),
('H18', 1, 1),
('I01', 1, 1),
('I02', 1, 1),
('I03', 1, 1),
('I04', 1, 1),
('I05', 1, 1),
('I06', 1, 1),
('I07', 1, 1),
('I08', 1, 1),
('I09', 1, 1),
('I10', 1, 1),
('I11', 1, 1),
('I12', 1, 1),
('I13', 1, 1),
('I14', 1, 1),
('I15', 1, 1),
('I16', 1, 1),
('I17', 1, 1),
('I18', 1, 1),
('J01', 1, 1),
('J02', 1, 1),
('J03', 1, 1),
('J04', 1, 1),
('J05', 1, 1),
('J06', 1, 1),
('J07', 1, 1),
('J08', 1, 1),
('J09', 1, 1),
('J10', 1, 1),
('J11', 1, 1),
('J12', 1, 1),
('J13', 1, 1),
('J14', 1, 1),
('J15', 1, 1),
('J16', 1, 1),
('J17', 1, 1),
('J18', 1, 1),
('K01', 1, 1),
('K02', 1, 1),
('K03', 1, 1),
('K04', 1, 1),
('K05', 1, 1),
('K06', 1, 1),
('K07', 1, 1),
('K08', 1, 1),
('K09', 1, 1),
('K10', 1, 1),
('K11', 1, 1),
('K12', 1, 1),
('K13', 1, 1),
('K14', 1, 1),
('K15', 1, 1),
('K16', 1, 1),
('K17', 1, 1),
('K18', 1, 1),
('L01', 1, 1),
('L02', 1, 1),
('L03', 1, 1),
('L04', 1, 1),
('L05', 1, 1),
('L06', 1, 1),
('L07', 1, 1),
('L08', 1, 1),
('L09', 1, 1),
('L10', 1, 1),
('L11', 1, 1),
('L12', 1, 1),
('L13', 1, 1),
('L14', 1, 1),
('L15', 1, 1),
('L16', 1, 1),
('L17', 1, 1),
('L18', 1, 1),
('M01', 1, 1),
('M02', 1, 1),
('M03', 1, 1),
('M04', 1, 1),
('M05', 1, 1),
('M06', 1, 1),
('M07', 1, 1),
('M08', 1, 1),
('M09', 1, 1),
('M10', 1, 1),
('M11', 1, 1),
('M12', 1, 1),
('M13', 1, 1),
('M14', 1, 1),
('M15', 1, 1),
('M16', 1, 1),
('M17', 1, 1),
('M18', 1, 1),
('N01', 1, 1),
('N02', 1, 1),
('N03', 1, 1),
('N04', 1, 1),
('N05', 1, 1),
('N06', 1, 1),
('N07', 1, 1),
('N08', 1, 1),
('N09', 1, 1),
('N10', 1, 1),
('N11', 1, 1),
('N12', 1, 1),
('N13', 1, 1),
('N14', 1, 1),
('N15', 1, 1),
('N16', 1, 1),
('N17', 1, 1),
('N18', 1, 1),
('O01', 1, 1),
('O02', 1, 1),
('O03', 1, 1),
('O04', 1, 1),
('O05', 1, 1),
('O06', 1, 1),
('O07', 1, 1),
('O08', 1, 1),
('O09', 1, 1),
('O10', 1, 1),
('O11', 1, 1),
('O12', 1, 1),
('O13', 1, 1),
('O14', 1, 1),
('O15', 1, 1),
('O16', 1, 1),
('O17', 1, 1),
('O18', 1, 1),
('P01', 1, 1),
('P02', 1, 1),
('P03', 1, 1),
('P04', 1, 1),
('P05', 1, 1),
('P06', 1, 1),
('P07', 1, 1),
('P08', 1, 1),
('P09', 1, 1),
('P10', 1, 1),
('P11', 1, 1),
('P12', 1, 1),
('P13', 1, 1),
('P14', 1, 1),
('P15', 1, 1),
('P16', 1, 1),
('P17', 1, 1),
('P18', 1, 1),
('Q01', 1, 1),
('Q02', 1, 1),
('Q03', 1, 1),
('Q04', 1, 1),
('Q05', 1, 1),
('Q06', 1, 1),
('Q07', 1, 1),
('Q08', 1, 1),
('Q09', 1, 1),
('Q10', 1, 1),
('Q11', 1, 1),
('Q12', 1, 1),
('Q13', 1, 1),
('Q14', 1, 1),
('Q15', 1, 1),
('Q16', 1, 1),
('Q17', 1, 1),
('Q18', 1, 1),
('R01', 1, 1),
('R02', 1, 1),
('R03', 1, 1),
('R04', 1, 1),
('R05', 1, 1),
('R06', 1, 1),
('R07', 1, 1),
('R08', 1, 1),
('R09', 1, 1),
('R10', 1, 1),
('R11', 1, 1),
('R12', 1, 1),
('R13', 1, 1),
('R14', 1, 1),
('R15', 1, 1),
('R16', 1, 1),
('R17', 1, 1),
('R18', 1, 1);

-- -- -> [07] Populando a tabela usuário | Populate table user
INSERT INTO tbUser(firstName, lastName, email, password, birthday, userImage) VALUES  
('Victor',
'Inknov',
'victor@gmail.com',
'12345',
'2003-02-12',
'me.jpg');